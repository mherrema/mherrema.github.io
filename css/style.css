.logo {
    max-height: 400px;
    -webkit-animation-delay: 2s !important;
    /* Chrome, Safari, Opera */
    animation-delay: 2s !important;
}
.row {
    padding-top: 100px;
    padding-bottom: 100px;
}
h1,
h2,
h3 {
    font-family: 'montserrat', sans-serif;
}
h1 {
    font-weight: 600;
}
.titillium{
    font-family: 'Titillium Web', sans-serif;
}
h2{
    margin: 0px;
}
h4{
    font-family: 'titillium web', sans-serif;
}
.section-container{
    padding-left: 0px;
    padding-right: 0px;
}
.section-title{
    display: inline-block;
    color: #fff; 
    background: #333; 
    padding: 12px;
    font-size: 18px;
    font-family: montserrat;
    margin: 0px;
    z-index: 9999;
}
.section-content{
    padding: 15px;
    margin-bottom: 0px;
    font-family: 'Titillium Web', sans-serif;
    font-size: 20px;
}
.head {
    /*    background-size: 100%;*/
    background: url('../images/beach-bg.jpg') no-repeat center center fixed;
    background-size: cover;
    background-position: 0px 0px;
    opacity: 0;
/*    max-width: 120%;*/
    /* make things invisible upon start */
    -webkit-animation: fadeIn ease-in 1;
    /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
    -moz-animation: fadeIn ease-in 1;
    animation: fadeIn ease-in 1;
    -webkit-animation-fill-mode: forwards;
    /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
    -moz-animation-fill-mode: forwards;
    animation-fill-mode: forwards;
    -webkit-animation-duration: 1s;
    -moz-animation-duration: 1s;
    animation-duration: 1s;
}
.side{
    
}

body {
    padding-bottom: 100px;
    overflow-x: hidden;
}
.contact {
    display: block;
    width: 60%;
    margin-left: auto;
    margin-right: auto;
    color: #333;
/*    margin-bottom: 20px;*/
    line-height: 1.42857143;
    -webkit-transition: all .2s ease-in-out;
    transition: all .2s ease-in-out;
    -webkit-transition: background 0.2s, opacity 0.2s;
    -moz-transition: background 0.2s, opacity 0.2s;
    transition: background 0.2s, opacity 0.2s;
}

.contact:hover {
    text-decoration: none;
    color: #333;
    opacity: .7;
}

.independent-study{
    color: #aaa;
    
}
.independent-study>h1{
    margin-top: 50px;
}
.independent-study:hover{
    color: #333;
    text-decoration: none;
}


@media (min-width: 920px) {
    .me {
        /*        background: url('../images/me.jpg') no-repeat center center fixed;*/
        background-position: 0px 0px;
        -webkit-background-size: cover;
        -moz-background-size: cover;
        -o-background-size: cover;
        background-size: cover;
        padding-top: 250px;
        padding-bottom: 100px;
        min-height: 800px;
    }
    .bg {
        z-index: -10;
        /*    width: 100%;*/
        /*        height: 100%;*/
        position: absolute;
        /*    top: 0;*/
        /*    left: 0;*/
    }
    .contact-block {
        margin-top: -500px;
    }
}
@media (max-width: 920px) {
    .bg {
        position: absolute;
        display: none;
    }
}
.hideme {
    opacity: 0;
}
/* make keyframes that tell the start state and the end state of our object */

@-webkit-keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
@-moz-keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
.fade-in {
    opacity: 0;
    /* make things invisible upon start */
    -webkit-animation: fadeIn ease-in 1;
    /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
    -moz-animation: fadeIn ease-in 1;
    animation: fadeIn ease-in 1;
    -webkit-animation-fill-mode: forwards;
    /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
    -moz-animation-fill-mode: forwards;
    animation-fill-mode: forwards;
    -webkit-animation-duration: 1s;
    -moz-animation-duration: 1s;
    animation-duration: 1s;
}
.fade-in.one {
    -webkit-animation-delay: 0.7s;
    -moz-animation-delay: 0.7s;
    animation-delay: 0.7s;
}
.fade-in.two {
    -webkit-animation-delay: 1.2s;
    -moz-animation-delay: 1.2s;
    animation-delay: 1.2s;
}
.fade-in.three {
    -webkit-animation-delay: 1.6s;
    -moz-animation-delay: 1.6s;
    animation-delay: 1.6s;
}
html {
    /*  overflow-x: hidden;*/
    width: 100%;
}
body {
    width: 100%;
    overflow-x: hidden;
}

@media(max-width: 768px){
    .head {
    /*    background-size: 100%;*/
    background: url('../images/beach.gif') no-repeat;
    -webkit-background-size: auto 100%;
  -moz-background-size: auto 100%;
  -o-background-size: auto 100%;
  background-size: auto 100%;
/*    background-position: 0px 0px;*/
/*    min-width: 100%;*/
    opacity: 0;
/*    max-width: 120%;*/
    /* make things invisible upon start */
    -webkit-animation: fadeIn ease-in 1;
    /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
    -moz-animation: fadeIn ease-in 1;
    animation: fadeIn ease-in 1;
    -webkit-animation-fill-mode: forwards;
    /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
    -moz-animation-fill-mode: forwards;
    animation-fill-mode: forwards;
    -webkit-animation-duration: 1s;
    -moz-animation-duration: 1s;
    animation-duration: 1s;
}
}

/* columns of same height styles */

.row-full-height {
  height: 100%;
}
.col-full-height {
  height: 100%;
  vertical-align: middle;
}
.row-same-height {
  display: table;
  width: 100%;
  /* fix overflow */
  table-layout: fixed;
}
.col-xs-height {
  display: table-cell;
  float: none !important;
}

@media (min-width: 768px) {
  .col-sm-height {
    display: table-cell;
    float: none !important;
  }
}
@media (min-width: 992px) {
  .col-md-height {
    display: table-cell;
    float: none !important;
  }
}
@media (min-width: 1200px) {
  .col-lg-height {
    display: table-cell;
    float: none !important;
  }
}

/* vertical alignment styles */

.col-top {
  vertical-align: top;
}
.col-middle {
  vertical-align: middle;
}
.col-bottom {
  vertical-align: bottom;
}